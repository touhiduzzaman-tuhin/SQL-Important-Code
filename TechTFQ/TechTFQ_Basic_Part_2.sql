-- CASE statement:  (IF 1 then print True ; IF 0 then print FALSE ; ELSE print -1)
--ID, SALRY, SALARY RANGE AS HIGH = GREATER THAN 10000, AVERAGE = BETWEEN 5000 TO 10000, LESS THAN 5000 = LOW

SELECT * FROM STAFF_SALARY;
SELECT STAFF_ID, SALARY
, CASE WHEN SALARY > 10000 THEN 'HIGH SALARY'
	WHEN SALARY BETWEEN 5000 AND 10000 THEN 'AVERAGE SALARY'
	WHEN SALARY < 5000 THEN 'LOW SALARY'
END AS RANGE
FROM STAFF_SALARY
ORDER BY SALARY DESC;

-- TO_CHAR / TO_DATE:


-- JOINS (Two ways to write SQL queries):
-- Using JOIN keyword between tables in FROM clause.
SELECT * FROM SUBJECTS;
SELECT * FROM CLASSES;

-- Fetch all the class name where Music is thought as a subject.
SELECT C.CLASS_NAME, S.SUBJECT_NAME
FROM SUBJECTS AS S
JOIN CLASSES AS C
ON S.SUBJECT_ID = C.SUBJECT_ID
WHERE S.SUBJECT_NAME = 'Music';

-- Fetch the full name of all staff who teach Mathematics.
SELECT * FROM SUBJECTS;
SELECT * FROM CLASSES;
SELECT * FROM STAFF;

SELECT STF.FIRST_NAME, STF.LAST_NAME, SBJ.SUBJECT_NAME
FROM STAFF AS STF
JOIN CLASSES AS CLS ON STF.STAFF_ID = CLS.TEACHER_ID
JOIN SUBJECTS AS SBJ ON CLS.SUBJECT_ID = SBJ.SUBJECT_ID
WHERE SBJ.SUBJECT_NAME = 'Mathematics';


SELECT DISTINCT(STF.FIRST_NAME || ' ' || STF.LAST_NAME) AS FULL_NAME, SBJ.SUBJECT_NAME
FROM STAFF AS STF
JOIN CLASSES AS CLS ON STF.STAFF_ID = CLS.TEACHER_ID
JOIN SUBJECTS AS SBJ ON CLS.SUBJECT_ID = SBJ.SUBJECT_ID
WHERE SUBJECT_NAME = 'Mathematics';



-- Fetch all staff who teach grade 8, 9, 10 and also fetch all the non-teaching staff
SELECT * FROM STAFF;
SELECT * FROM CLASSES;

SELECT STAFF_TYPE, (FIRST_NAME || ' ' || LAST_NAME) AS FULL_NAME, AGE, JOIN_DATE,
CASE WHEN GENDER = 'F' THEN 'Female'
	WHEN GENDER = 'M' THEN 'Male'
END AS GENDER
FROM STAFF
WHERE STAFF_TYPE = 'Non-Teaching'
UNION
SELECT STF.STAFF_TYPE, (STF.FIRST_NAME || ' ' || STF.LAST_NAME) AS FULL_NAME, STF.AGE, STF.JOIN_DATE
, CASE WHEN STF.GENDER = 'F' THEN 'Female'
		WHEN STF.GENDER = 'M' THEN 'Male'
END AS GENDER
FROM STAFF AS STF
JOIN CLASSES AS CLS ON STF.STAFF_ID = CLS.TEACHER_ID
WHERE CLS.CLASS_NAME IN ('Grade 8', 'Grade 9', 'Grade 10');


SELECT STAFF_TYPE, (FIRST_NAME || ' ' || LAST_NAME) AS FULL_NAME, AGE, JOIN_DATE,
CASE WHEN GENDER = 'F' THEN 'Female'
	WHEN GENDER = 'M' THEN 'Male'
END AS GENDER
FROM STAFF
WHERE STAFF_TYPE = 'Non-Teaching'
UNION ALL
SELECT STF.STAFF_TYPE, (STF.FIRST_NAME || ' ' || STF.LAST_NAME) AS FULL_NAME, STF.AGE, STF.JOIN_DATE
, CASE WHEN STF.GENDER = 'F' THEN 'Female'
		WHEN STF.GENDER = 'M' THEN 'Male'
END AS GENDER
FROM STAFF AS STF
JOIN CLASSES AS CLS ON STF.STAFF_ID = CLS.TEACHER_ID
WHERE CLS.CLASS_NAME IN ('Grade 8', 'Grade 9', 'Grade 10');



-- Count no of students in each class
SELECT * FROM STUDENT_CLASSES;

SELECT CLASS_ID, COUNT(STUDENT_ID) AS STUDENTS
FROM STUDENT_CLASSES
GROUP BY CLASS_ID
ORDER BY CLASS_ID;

-- Return only the records where there are more than 100 students in each class
SELECT * FROM STUDENT_CLASSES;

SELECT CLASS_ID, COUNT(1) AS STUDENTS
FROM STUDENT_CLASSES
GROUP BY CLASS_ID
HAVING COUNT(1) > 100
ORDER BY STUDENTS;

-- Parents with more than 1 kid in school.

SELECT * FROM STUDENT_PARENT;
SELECT * FROM STUDENT_PARENT WHERE PARENT_ID = 'P00003';

SELECT PARENT_ID, COUNT(1) AS CHILD
FROM STUDENT_PARENT
GROUP BY PARENT_ID
HAVING COUNT(1) > 1
ORDER BY CHILD;




































































































































