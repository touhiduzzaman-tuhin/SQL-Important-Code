SELECT * FROM EMPLOYEE;
SELECT * FROM DEPARTMENT;

-- SUB QUERY
-- FIND THE EMPLOYEES WHO'S SALARY IS MORE THAN THE AVERAGE SALARY EARN BY THE ALL EMPLOYEE
-- FIND AVERAGE SALARY
-- FILTER ABOVE THAN AVERAGE SALARY EMPLOYEE
SELECT * FROM EMPLOYEE;
SELECT AVG(SALARY)::NUMERIC(10, 2) AS AVERAGE_SALARY FROM EMPLOYEE;
SELECT * FROM EMPLOYEE WHERE SALARY > (SELECT AVG(SALARY)::NUMERIC(10, 2) AS AVERAGE_SALARY FROM EMPLOYEE);

-- SCLAR SUB QUERY
-- IT RETURNS ONLY 1 ROW AND 1 COLUMN

SELECT *
FROM EMPLOYEE WHERE (SELECT AVG(SALARY)::NUMERIC(10, 2) FROM EMPLOYEE) < SALARY;

SELECT *
FROM EMPLOYEE AS EMP
JOIN (SELECT AVG(SALARY)::NUMERIC(10, 2) AS AVG_SALARY FROM EMPLOYEE) AS E 
ON EMP.SALARY > E.AVG_SALARY;



SELECT * FROM EMPLOYEE;

SELECT * FROM STAFF_SALARY;

-- STUDENT TABLE CREATE

CREATE TABLE STUDENT
(	
	STD_ID INT
	, STD_NAME VARCHAR(50)
	, STD_DEPT VARCHAR(20)
	, SALARY INT
);

SELECT * FROM STUDENT;

INSERT INTO STUDENT VALUES
(101, 'TUHIN', 'CSE', 10000),
(102, 'RANA', 'LAW', 16000),
(103, 'RONI', 'IT', 18000),
(104, 'PRANTO', 'IT', 10000),
(105, 'SAKIB', 'CSE', 17000),
(106, 'SHANTO', 'FINANCE', 32000),
(107, 'ASIF', 'CSE', 1000),
(108, 'SHAHED', 'IT', 40000),
(109, 'SHAWON', 'IT', 10700),
(110, 'SUDIP', 'LAW', 1900),
(111, 'MONA', 'CSE', 12000),
(112, 'AKA', 'FINANCE', 11000),
(113, 'PINKY', 'CSE', 14000),
(114, 'MUNIRA', 'CSE', 18900),
(115, 'KONA', 'LAW', 18700),
(116, 'HASAN', 'CSE', 13200),
(117, 'SAYED', 'CSE', 14300),
(118, 'MOSTOFA', 'EEE', 12300),
(119, 'KAMAL', 'CSE', 13500),
(120, 'KALAM', 'CSE', 17500),
(121, 'RAHIM', 'EEE', 17900),
(122, 'MAMUN', 'EEE', 19700),
(123, 'ALOM', 'CSE', 12300),
(124, 'POLASH', 'EEE', 10500),
(125, 'LITON', 'EEE', 10700);

SELECT * FROM STUDENT;

CREATE TABLE DEPT
(
	DEPT_ID INT
	, STD_DEPT VARCHAR(20)
	, LOCATION VARCHAR(100)
);

SELECT * FROM DEPT;

INSERT INTO DEPT VALUES
(1, 'CSE', 'KHULNA'),
(2, 'EEE', 'Dhaka'),
(3, 'IT', 'Dhaka'),
(4, 'LAW', 'RANGPUR'),
(5, 'FINANCE', 'PABNA'),
(6, 'ENGLISH', 'Dhaka'),
(7, 'ADMIN', 'BOGRA');

SELECT * FROM DEPT;


-- MULTIPLE ROW SUB QUERY
-- SUB QUERY WHICH RETURNS MULTIPLE ROW WITH MULTIPLE COLUMN
-- SUB QUERY WHICH RETURN 1 COLUMN WITH MULTIPLE ROW

-- MULTIPLE COLUMN MULTIPLE ROW
-- FIND THE EMPLOYEES WHO EARN HIGHEST SALARY IN EACH DEPARTMENT

SELECT MAX(SALARY) FROM STUDENT;

SELECT * FROM STUDENT;

-- MULTIPLE COLUMN
SELECT STD_DEPT, MAX(SALARY) AS HIGHEST_SALARY
FROM STUDENT
GROUP BY STD_DEPT;

SELECT *
FROM STUDENT
WHERE (STD_DEPT, SALARY) IN (SELECT STD_DEPT, MAX(SALARY) AS SALARY
							FROM STUDENT
							GROUP BY STD_DEPT);


-- SINGLE COLUMN MULTIPLE COLUMN
-- FIND THE DEPT WHO DON'T HAVE ANY EMPLOYEE

SELECT *
FROM DEPT
WHERE STD_DEPT NOT IN (SELECT DISTINCT STD_DEPT FROM STUDENT);

-- SINGLE COLUMN
SELECT DISTINCT STD_DEPT FROM STUDENT;









































































































































































